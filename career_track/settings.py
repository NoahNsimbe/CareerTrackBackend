"""
Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import json
import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
app_name = os.path.basename(os.path.dirname(__file__))


def settings_path(file):
    return os.path.join(BASE_DIR, app_name, file)


if os.path.exists(os.path.join(BASE_DIR, app_name, "settings.json")):
    settings = json.load(open(settings_path("settings.json")))
else:
    raise Exception("Settings not configured")
    # def make_secret_key():
    #     from django.utils.crypto import get_random_string
    #     return get_random_string(50, 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

SECRET_KEY = settings["secret-key"]

DEBUG = settings["debug"]
ALLOWED_HOSTS = [settings["host"].split(':')[0]]
ADMINS = settings.get("admins", [])
SITE_ID = settings["site id"]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]


for app in settings["installed_apps"]:
    INSTALLED_APPS.append(app)


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=settings["jwt_settings"]["access_token_lifetime"]),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=settings["jwt_settings"]["refresh_token_lifetime"]),
    'ROTATE_REFRESH_TOKENS': settings["jwt_settings"]["rotate_refresh_tokens"],
    'BLACKLIST_AFTER_ROTATION': settings["jwt_settings"]["blacklist_after_rotation"],
    'SIGNING_KEY': settings["secret-key"],
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=settings["jwt_settings"]["sliding_token_lifetime"]),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=settings["jwt_settings"]["sliding_refresh_token_lifetime"]),
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}


ROOT_URLCONF = app_name + '.urls'


CORS_ORIGIN_ALLOW_ALL = settings["cors"]["origin_allow_all"]
CORS_ORIGIN_WHITELIST = settings["cors"]["origin_whitelist"]
CORS_ALLOW_METHODS = settings["cors"]["allow_methods"]
CORS_ALLOW_HEADERS = settings["cors"]["allow_headers"]


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = app_name + '.wsgi.application'


if settings["https"]:
    SESSION_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_HTTPONLY = True
    CSRF_COOKIE_SECURE = True


if settings.get("email"):
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = settings["email"]["host"]
    EMAIL_PORT = settings["email"]["port"]
    EMAIL_HOST_USER = settings["email"]["user"]
    EMAIL_HOST_PASSWORD = settings["email"]["password"]
    EMAIL_USE_TLS = settings["email"]["tls"]


DATABASES = {
    'default': {
        'ENGINE': settings['main_db']['engine'],
        'NAME': settings['main_db']['name'],
        'HOST': settings['main_db']['host'],
        'PORT': settings['main_db']['port'],
        'USER': settings['main_db']['user'],
        'PASSWORD': settings['main_db']['password'],
    }
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


STATIC_URL = '/static/'
